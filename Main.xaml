<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="-- KISCON에 입력해야 하는 변경 데이터에 KISCON 화면에 업데이트하는 프로세스 &#xA;&#xA;-- TEMPLATE--" DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Query">[Query]</OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_ConnStr">[ConnStr]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <Assign DisplayName="Add OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="Assign_19">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                          </If.Else>
                        </If>
                      </Sequence>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                      <Sequence sap2010:Annotation.AnnotationText="초기 KISCON 변경 데이터 검색후 KISCON 작업 공간으로 이동 ( GatherKisconData) &#xA;사용자ID와 PW를 Credential로 등록 후 PW는 초기화 ( AddCredentialAssets) &#xA;작업중 오류 ( 상태가 P인 항목)에 대해서 1일이 지났다면 N으로 변경 처리 " DisplayName="Sequence - KISCON 등록은 시작시 한번만 " sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="KisconAccounts" />
                          <Variable x:TypeArguments="x:Int32" Name="UpdatedRows" />
                          <Variable x:TypeArguments="x:Int32" Name="AffectedRows" />
                        </Sequence.Variables>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetherKisconData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Custom\GetherKisconData.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetherKisconData").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetherKisconData").ToString]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateInProgressStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Custom\UpdateInProgressStatus.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStrDict">[ConnStr]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_QueryDict">[Query]</InArgument>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="out_ChangedRows">[AffectedRows]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Argument1" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetKisconAllAccounts workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Custom\GetKisconAllAccounts.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetKisconAllAccounts").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetKisconAllAccounts").ToString]</InArgument>
                            <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_KisconAccountDT">[KisconAccounts]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AddCredentialAssets workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Custom\AddCredentialAssets.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_KisconUsers">[KisconAccounts]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("UpdatePasswordWithNull").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("UpdatePasswordWithNull").ToString]</InArgument>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="out_UpdateCount">[UpdatedRows]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Trace" Message="[String.Format(&quot; {0} 프로젝트 계정이 Credential로 저장되었습니다. &quot;, UpdatedRows)]" />
                      </Sequence>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStr">[ConnStr]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Query">[Query]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2">
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="처리해야 할 공사정보를 가져옴 " DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Sequence_1">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                    </Sequence.Variables>
                    <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
                    <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Then>
                        <Sequence DisplayName="Orchestrator stop requested" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                          <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[TransactionItem]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                          <TryCatch.Try>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="RunYes" />
                              </Sequence.Variables>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetExecStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Custom\GetExecStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetExecFlag").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetExecFlag").ToString]</InArgument>
                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="out_RunOK">[RunYes]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[RunYes]" DisplayName="If - 실행가능시간일 경우에만 처리 " sap2010:WorkflowViewState.IdRef="If_12">
                                <If.Then>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Query">[Query]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStr">[ConnStr]</InArgument>
                                      <InOutArgument x:TypeArguments="x:String" x:Key="io_ContinueTab">[ContinueTab]</InOutArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_RetryNumber">[RetryNumber]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_41">
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[String.Format(&quot;실행하지 말아야 할 조건이여서 중지함...&quot;)]" />
                                    <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="sd:DataRow">[TransactionItem]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Log exception message and End process" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                  <Assign DisplayName="End Process " sap2010:WorkflowViewState.IdRef="Assign_20">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataRow">[TransactionItem]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Else>
                    </If>
                  </Sequence>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_6">
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="하나의 공사정보에 대해서 총 6개 탭(공사개요,수급업체,보증금,공사대금수령,하수급인,하도급대금지급)에 대해서 처리 함 " DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="MailCount" />
                            </TryCatch.Variables>
                            <TryCatch.Try>
                              <Sequence DisplayName="Process the current TransactionItem" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:List(x:String)" Name="BizErrorList" />
                                </Sequence.Variables>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[RetryNumber = 0 Or Not Config.ContainsKey(&quot;StatusDict&quot;)]" DisplayName="If - 재시작에 대한 " sap2010:WorkflowViewState.IdRef="If_14">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[StatusDict]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of string, string)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42">
                                      <Assign DisplayName="Assign - 기존 데이터 사용 " sap2010:WorkflowViewState.IdRef="Assign_53">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[StatusDict]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[CType( Config("StatusDict"), Dictionary(Of String,String))]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - 기존 오류 메세지 제거 " sap2010:WorkflowViewState.IdRef="Assign_55">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StatusDict("MESSAGE")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Assign - 기존 오류 메세지 제거 " sap2010:WorkflowViewState.IdRef="Assign_58">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[StatusDict( ContinueTab + ".MSG")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:List(x:String)">[BizErrorList]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of string)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:BlockUserInput TimeoutMS="{x:Null}" DisplayName="Block User Input" sap2010:WorkflowViewState.IdRef="BlockUserInput_1">
                                  <ui:BlockUserInput.Body>
                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Process.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Query">[Query]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStr">[ConnStr]</InArgument>
                                          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="io_ErrorList">[BizErrorList]</InOutArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_StatusDict">[StatusDict]</InOutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ContinueTab">[ContinueTab]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </ui:BlockUserInput.Body>
                                </ui:BlockUserInput>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetJobStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Custom\GetJobStatus.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetJobStatus").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetJobStatus").ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[StatusDict("PJT_CD")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TabKey">[StatusDict("TAB_KEY")]</InArgument>
                                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_StatusDict">[StatusDict]</InOutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TabName">[Config("ContinueTab").ToString]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[BizErrorList]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="s:String[]" Name="ErrorMsgs" />
                                        </Sequence.Variables>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:String[]">[ErrorMsgs]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:String[]">[item.Split(":".ToCharArray)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[StatusDict(ErrorMsgs.First().Trim + ".MSG")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailOut workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Custom\SendEmailOut.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Contents">[StatusDict]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[StatusDict("PJT_CD")]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_MainCode">CREATE_MAIL</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_QueryDic">[Query]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStrDic">[ConnStr]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConfigDict">[Config]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_ContractName">[TransactionItem("기본계약명").ToString]</InArgument>
                                    <OutArgument x:TypeArguments="x:Int32" x:Key="out_SentCount">[MailCount]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <If Condition="[StatusDict is Nothing]" DisplayName="If - BusinessRule 예외의 대한 처리 " sap2010:WorkflowViewState.IdRef="If_10">
                                      <If.Then>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_33">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[StatusDict]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 알고 있는 메세지  종류 추가 " sap2010:WorkflowViewState.IdRef="Assign_21">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("MESSAGE")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 오류로 표시 " sap2010:WorkflowViewState.IdRef="Assign_22">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("STATUS")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">오류</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("PJT_CD")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[TransactionItem("PJT_CD").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("TAB_NAME")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("TAB_KEY")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[DateTIme.Now.Ticks.ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogKisconStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Custom\LogKisconStatus.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("LogKisconStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("LogKisconStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Messages">[StatusDict]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetJobStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Custom\GetJobStatus.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetJobStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetJobStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[StatusDict("PJT_CD")]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TabKey">[StatusDict("TAB_KEY")]</InArgument>
                                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_StatusDict">[StatusDict]</InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TabName">[Config("ContinueTab").ToString]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailOut workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Custom\SendEmailOut.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Contents">[StatusDict]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[TransactionItem("PJT_CD").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_MainCode">CREATE_MAIL</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_QueryDic">[Query]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStrDic">[ConnStr]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConfigDict">[Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ContractName">[TransactionItem("기본계약명").ToString]</InArgument>
                                              <OutArgument x:TypeArguments="x:Int32" x:Key="out_SentCount">[MailCount]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Config("StatusDict")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[StatusDict]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 알고 있는 메세지  종류 추가 " sap2010:WorkflowViewState.IdRef="Assign_29">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("MESSAGE")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 오류로 표시 " sap2010:WorkflowViewState.IdRef="Assign_30">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("STATUS")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">오류</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogKisconStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Custom\LogKisconStatus.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("LogKisconStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("LogKisconStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Messages">[StatusDict]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetJobStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Custom\GetJobStatus.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetJobStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetJobStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[StatusDict("PJT_CD")]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TabKey">[StatusDict("TAB_KEY")]</InArgument>
                                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_StatusDict">[StatusDict]</InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_TabName">[Config("ContinueTab").ToString]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailOut workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Custom\SendEmailOut.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Contents">[StatusDict]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[TransactionItem("PJT_CD").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_MainCode">CREATE_MAIL</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_QueryDic">[Query]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStrDic">[ConnStr]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConfigDict">[Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ContractName">[TransactionItem("기본계약명").ToString]</InArgument>
                                              <OutArgument x:TypeArguments="x:Int32" x:Key="out_SentCount">[MailCount]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                                    <If Condition="[StatusDict is Nothing]" DisplayName="If - SystemError 예외의 대한 처리 " sap2010:WorkflowViewState.IdRef="If_11">
                                      <If.Then>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[StatusDict]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 알고 있는 메세지  종류 추가 " sap2010:WorkflowViewState.IdRef="Assign_38">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("MESSAGE")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 오류로 표시 " sap2010:WorkflowViewState.IdRef="Assign_39">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("STATUS")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">오류</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("PJT_CD")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[TransactionItem("PJT_CD").ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("TAB_NAME")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("TAB_KEY")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[DateTIme.Now.Ticks.ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
                                          <Assign DisplayName="Assign - 재시작을 위해서 데이터 저장" sap2010:WorkflowViewState.IdRef="Assign_52">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Config("StatusDict")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[StatusDict]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 알고 있는 메세지  종류 추가 " sap2010:WorkflowViewState.IdRef="Assign_43">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("MESSAGE")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - 오류로 표시 " sap2010:WorkflowViewState.IdRef="Assign_44">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[StatusDict("STATUS")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">오류</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogKisconStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Custom\LogKisconStatus.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("LogKisconStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("LogKisconStatus").ToString]</InArgument>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Messages">[StatusDict]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetJobStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Custom\GetJobStatus.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[ConnStr("GetJobStatus").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Query">[Query("GetJobStatus").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[StatusDict("PJT_CD")]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TabKey">[StatusDict("TAB_KEY")]</InArgument>
                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_StatusDict">[StatusDict]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_TabName">[Config("ContinueTab").ToString]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmailOut workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Custom\SendEmailOut.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Contents">[StatusDict]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[TransactionItem("PJT_CD").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_MainCode">ERROR_MAIL</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_QueryDic">[Query]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStrDic">[ConnStr]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConfigDict">[Config]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ContractName">[TransactionItem("기본계약명").ToString]</InArgument>
                                        <OutArgument x:TypeArguments="x:Int32" x:Key="out_SentCount">[MailCount]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_4">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                <TryCatch.Try>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                      <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Query">[Query]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConnStr">[ConnStr]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Error" sap2010:WorkflowViewState.IdRef="Transition_4" To="{x:Reference __ReferenceID0}" Condition="[SystemError IsNot Nothing]" />
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_1" To="{x:Reference __ReferenceID1}" Condition="[BusinessRuleException IsNot Nothing]" />
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID1}" Condition="[SystemError Is Nothing And BusinessRuleException is Nothing]" />
                        </State.Transitions>
                        <State.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="StatusDict" />
                        </State.Variables>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7">
                    <Transition.To>
                      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                        <State.Entry>
                          <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_4">
                            <TryCatch.Try>
                              <Sequence DisplayName="End of process activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </State.Entry>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
            </Transition.Action>
            <Transition.Condition>[SystemError is Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID2}">
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;System error at initialization: &quot; + SystemError.Message + &quot; at Source: &quot; + SystemError.Source]" />
            </Transition.Action>
            <Transition.Condition>[SystemError isNot Nothing]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="sd:DataRow" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="ConnStr" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Query" />
      <Variable x:TypeArguments="x:String" Default="공사개요" Name="ContinueTab" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="483,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="336,87" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,112" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="581,260">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="336,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="336,87" />
      <sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="336,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_43" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_20" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,825">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="358,1455">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="483,1603">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="483,87" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="505,1954">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="509,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="523,2181">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_1" sap:VirtualizedContainerService.HintSize="1076,22" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_39" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="675,463" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="697,714">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="701,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="715,941">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="1076,1089" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1098,1332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="531,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="531,532" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="531,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BlockUserInput_1" sap:VirtualizedContainerService.HintSize="531,337" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="531,87" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="531,418" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="531,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_36" sap:VirtualizedContainerService.HintSize="531,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="553,2072">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_41" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="336,1065">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_40" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="336,765">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="697,1213">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_37" sap:VirtualizedContainerService.HintSize="697,87" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="719,1521">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="557,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="264,684">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_42" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="336,511">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="625,832">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="625,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_33" sap:VirtualizedContainerService.HintSize="625,87" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="625,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_38" sap:VirtualizedContainerService.HintSize="625,87" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="647,1394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="557,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="400,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="414,282" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="571,2321">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="430,242">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">348.3,522 348.3,530 596.5,530 596.5,56.9 508.5,56.9</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_1" sap:VirtualizedContainerService.HintSize="430,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">401.05,522 401.05,532 574.5,532 574.5,207.9 509.5,207.9</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="429.6,553.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">443.25,522 443.25,543.1 539.5,543.1 539.5,243.1 509.5,243.1</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="211,142">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,380</av:Point>
            <av:Size x:Key="ShapeSize">211,142</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_6" sap:VirtualizedContainerService.HintSize="429.6,802.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">392,269.5 392,299.5 390.5,299.5 390.5,380</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,343">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="418,438" />
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="124,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
            <av:Size x:Key="ShapeSize">124,104</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">392,269.5 392,299.5 135,299.5 135,292.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="235,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,181.5</av:Point>
            <av:Size x:Key="ShapeSize">235,88</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">221</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314.4,75.2" />
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,537">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.5,96.5 391.5,126.5 392,126.5 392,181.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="429.6,802.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.5,96.5 391.5,126.5 128.8,126.5 128.8,188.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="234,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,8.5</av:Point>
            <av:Size x:Key="ShapeSize">234,88</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="786,801">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
            <x:Double x:Key="StateContainerWidth">772</x:Double>
            <x:Double x:Key="StateContainerHeight">708</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,50 160,50 160,52.5 274.5,52.5</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="826,881" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>