<Activity mc:Ignorable="sap sap2010 sads" x:Class="SendEmailOut"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Contents" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_ProjectCode" Type="InArgument(x:String)" />
    <x:Property Name="in_MainCode" Type="InArgument(x:String)" />
    <x:Property Name="in_QueryDic" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ConnStrDic" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ConfigDict" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ContractName" Type="InArgument(x:String)" />
    <x:Property Name="out_SentCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_ProvName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SendEmailOut_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="메일을 보내는 기능을 수행함. &#xA;&#xA;Input &#xA;  - in_ConnStrDic: Dictionary&lt;String,Object&gt; - DB 연결 정보 데이터 &#xA;  - in_QueryDict: Dictionary&lt;String,Object&gt; - 쿼리종류  &#xA;  - in_ConfigDict: Dictionary&lt;String, Object&gt; - 설정 정보 &#xA;  - in_ProjectCode: String -프로젝트 코드 (공무 담당자에게 메일 발송) &#xA;  - in_MainCode: String - 메일 발신 코드 ( CREATE_MAIL, ERROR_MAIL) &#xA;  - in_Contents: Dictionary&lt;Sting,String&gt; - 보내야 하는 데이터가 있는 내용   &#xA;  - in_ContractName: String - KISCON 공사명 &#xD;&#xA;  - in_ProvName: String - DB Client 이름 &#xA;&#xA;Output&#xA;  - out_SentCount: int32 - 발송한 메세지 개수 " DisplayName="SendEmailOut" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="KISCON 처리 결과 메일" Name="Title" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;공사개요&quot;, &quot;수급업체&quot;, &quot;공사대금수령&quot;, &quot;보증금&quot;, &quot;하수급인&quot;, &quot;하도급대금지급&quot;}]" Name="TabNames" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="SentCount" />
    </Sequence.Variables>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="Receipts" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="MailTemplate" />
            <Variable x:TypeArguments="x:String" Name="Rows" />
            <Variable x:TypeArguments="x:String" Name="RowTemplate" />
            <Variable x:TypeArguments="x:String" Name="MailBody" />
          </Sequence.Variables>
          <If Condition="[Not String.IsNullOrEmpty(in_MainCode) AndAlso in_MainCode = &quot;ERROR_MAIL&quot;]" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[Receipts]" DisplayName="Execute Query - IT운영팀 " sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" ProviderName="[in_ProvName]" Sql="[in_QueryDic(&quot;GetEmailReceiptsWithCode&quot;).ToString]" ConnectionString="[in_ConnStrDic(&quot;GetEmailReceipts&quot;).ToString]">
                <ui:ExecuteQuery.Parameters>
                  <InArgument x:TypeArguments="x:String" x:Key="main_code">[in_MainCode]</InArgument>
                </ui:ExecuteQuery.Parameters>
              </ui:ExecuteQuery>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="TempDT" />
                </Sequence.Variables>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[TempDT]" DisplayName="Execute Query - IT운영팀" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" ProviderName="[in_ProvName]" Sql="[in_QueryDic(&quot;GetEmailReceiptsWithCode&quot;).ToString]" ConnectionString="[in_ConnStrDic(&quot;GetEmailReceipts&quot;).ToString]">
                  <ui:ExecuteQuery.Parameters>
                    <InArgument x:TypeArguments="x:String" x:Key="main_code">[in_MainCode]</InArgument>
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[Receipts]" DisplayName="Execute Query - 현업 공무담당자 " sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="[in_ProvName]" Sql="[in_QueryDic(&quot;GetEmailReceipts&quot;).ToString]" ConnectionString="[in_ConnStrDic(&quot;GetEmailReceipts&quot;).ToString]">
                  <ui:ExecuteQuery.Parameters>
                    <InArgument x:TypeArguments="x:String" x:Key="project_code">[in_ProjectCode]</InArgument>
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <ui:MergeDataTable Destination="[Receipts]" DisplayName="Merge Data Table" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[TempDT]" />
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign - 메일 템플릿 " sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailTemplate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_ConfigDict("BodyTemplate").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign - 행 템플릿 " sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RowTemplate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_ConfigDict("RowTemplate").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Rows]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[String.Join(&quot;, &quot;, in_Contents.Keys)]" />
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - 각 탭별 데이터 가져오기 " sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[TabNames]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="Key1" />
                    <Variable x:TypeArguments="x:String" Name="Key2" />
                    <Variable x:TypeArguments="x:String" Name="Val1" />
                    <Variable x:TypeArguments="x:String" Name="Val2" />
                    <Variable x:TypeArguments="x:String" Name="Key3" />
                    <Variable x:TypeArguments="ui:GenericValue" Name="Val3" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Key1]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format( "{0}.{1}", item, "CHG1")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Key2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format( "{0}.{1}", item, "CHG2")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Key3]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format( "{0}.{1}", item, "MSG")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[in_Contents.ContainsKey( Key1)]" DisplayName="If - CHG_MSG1이 있는지 확인 " sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Val1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_Contents( Key1)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Val1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <If Condition="[in_Contents.ContainsKey( Key2)]" DisplayName="If - CHG_MSG2가 있는지 확인 " sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Val2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_Contents( Key2)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Val2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <If Condition="[in_Contents.ContainsKey( Key3)]" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[Val3]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[in_Contents( Key3)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[Val3]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[String.Empty]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <Assign DisplayName="Assign - 기존 Row에 신규 로 추가 " sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Rows]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Rows + String.Format( RowTemplate, item, Val1, Val2, Val3)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <Assign DisplayName="Assign - 메일 본문 완성 " sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format( MailTemplate, in_ContractName, Rows)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[in_MainCode = &quot;ERROR_MAIL&quot;]" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Title]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">KISCON 처리 오류 메일</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[Receipts]" DisplayName="For Each Row - 수신자 수 만큼 메일 발송 " sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="LocalSql" />
                    <Variable x:TypeArguments="sd:DataTable" Name="MyRS" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[LocalSql]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format( in_QueryDic("SendEmailOut").ToString, row("EMAIL").ToString, Title, MailBody)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_ConnStrDic(&quot;SendEmailOut&quot;).ToString]" />
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[MyRS]" DisplayName="Execute Query - 메일발송 SQL " sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" ProviderName="[in_ProvName]" Sql="[LocalSql]" ConnectionString="[in_ConnStrDic(&quot;SendEmailOut&quot;).ToString]">
                    <ui:ExecuteQuery.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:ExecuteQuery.Parameters>
                  </ui:ExecuteQuery>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[SentCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[SentCount + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(&quot;처리 결과 메일이 총 {0} 에게 발송 되었습니다. &quot;, Receipts.Rows.Count)]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[String.Format(&quot;메일 발송 중 예외 사항 : {0}&quot;, exception.Message)]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[out_SentCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[SentCount]</InArgument>
          </Assign.Value>
        </Assign>
      </TryCatch.Finally>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d0tDOlxVc2Vyc1xoeXVuZ3Nvb1xXb3Jrc3BhY2VzXERvb3NhblxLSVNDT05fVXBkYXRlclxEb29zYW5cU2VuZEVtYWlsT3V0LnhhbWxtVAPvAg4CAQFWNFZFAgEEVzZXqgECAQNYM1g2AgECWgXtAhACAQVfCdcCFAIBDuQCCesCEgIBCd8CDd8CwwECAQZmC4ABEAMBhgGBAQuIARQDAYEBiQELkAEUAgF8kQELmgEUAgF4mwELoQEbAgF3ogELlgIYAgE2lwILngIUAgEvnwILqgIQAgEoqwIL1QIbAgER1gIL1gLMAQIBD+kCM+kCPgIBDOYCNOYCQwIBCt8Ce98CwAECAQdmGWZvAwGHAWgPbCEDAaYBbw9+GgMBigGGATaGAV4DAYQBgwE3gwFFAwGCAY4BNo4BXQIBf4sBN4sBRAIBfZcBEZcBQAIBe5MBN5MBPQIBeaIBpwGiAbMBAgF1qAERkwIcAgE3nAI2nAJrAgEymQI3mQJBAgEwnwIZnwJBAgEpoQIPqAIYAgErqwI8qwJIAgEmsQIR0gIcAgES1gJ41gLJAQIBEGj9AWiMAgMBrwFo4QJomQMDAa0BaI0BaJkBAwGrAWpMalkDAakBaJECaM8CAwGnAXMRdyMDAZsBeBF8IwMBkAF9EX29AQMBiwGxARO4ARwCAXC5ARPAARwCAWvBARPIARwCAWbJARPeARgCAVjfARP0ARgCAUr1AROKAhgCATyLAhOSAhwCATimAjqmAkkCAS6jAjujAkICASy2AhO9AhwCASK+AhPEAiMCASHFAhPJAiUCARjKAhPRAhwCARNz/AFziwIDAaQBc+ACc5gDAwGiAXOPAXOZAQMBoAF1TnVbAwGeAXOQAnPOAgMBnAF4ggJ4kQIDAZkBeN4CeJYDAwGXAXiPAXibAQMBlQF4lgJ4zAIDAZMBelF6YQMBkQF9MH08AwGOAX2wAX26AQMBjAG2AT62AWcCAXOzAT+zAUUCAXG+AT6+AWcCAW67AT+7AUUCAWzGAT7GAWYCAWnDAT/DAUUCAWfJASHJAUMCAVnLARfSASACAWDVARfcASACAVzfASHfAUMCAUvhARfoASACAVLrARfyASACAU71ASH1AUMCAT33ARf+ASACAUSBAheIAiACAUCQAj6QAnoCATuNAj+NAkUCATm7Aj67ApwBAgEluAI/uAJJAgEjxQKAAsUCjwICAR/FArICxQLmAgIBHcUCkQHFApkBAgEbxQKUAsUCoAICARnPAj3PAkwCARbMAj7MAkkCARTQAULQAVYCAWPNAUPNAUkCAWHaAULaAVACAV/XAUPXAUkCAV3mAULmAVYCAVXjAUPjAUkCAVPwAULwAVACAVHtAUPtAUkCAU/8AUn8AV0CAUf5AUr5AVACAUWGAkmGAlcCAUODAkqDAlACAUE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExecuteQuery_2" sap:VirtualizedContainerService.HintSize="314,88" />
      <sap2010:ViewStateData Id="ExecuteQuery_4" sap:VirtualizedContainerService.HintSize="314,88" />
      <sap2010:ViewStateData Id="ExecuteQuery_1" sap:VirtualizedContainerService.HintSize="314,88" />
      <sap2010:ViewStateData Id="MergeDataTable_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,402">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="675,550" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="531,1228">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="675,1362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="675,208" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_5" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_3" sap:VirtualizedContainerService.HintSize="314,88" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,503">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="675,651" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="697,3637">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="701,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="715,3864" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="737,4210">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendEmailOut_1" sap:VirtualizedContainerService.HintSize="777,4290" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>