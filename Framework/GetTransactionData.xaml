<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetTransactionData"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_TransactionItem" Type="OutArgument(sd:DataRow)" />
    <x:Property Name="out_TransactionField1" Type="OutArgument(x:String)" />
    <x:Property Name="out_TransactionField2" Type="OutArgument(x:String)" />
    <x:Property Name="out_TransactionID" Type="OutArgument(x:String)" />
    <x:Property Name="io_TransactionData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_Query" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ConnStr" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_ContinueTab" Type="InOutArgument(x:String)" />
    <x:Property Name="in_RetryNumber" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetTransactionData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Get data from spreadsheets, databases, email, web API or UiPath server queues. If no new data, set out_TransactionItem to Nothing. &#xA;&#xA;For a linear process (not repetitive), set out_TransactionItem only for in_TransactionNumber 1 - first and only transaction. &#xA;&#xA;If the process is repeatable, set io_TransactionData once for in_TransactionNumber 1, then assign a new out_TransactionItem by using the in_TransactionNumber to index io_TransactionData. Be aware that, at the end of the io_TransactionData collection, it is your responsibility to set out_TransactionItem to Nothing, thus ending the process." DisplayName="GetTransactionData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="ProjectDT" />
    </Sequence.Variables>
    <If Condition="[in_RetryNumber = 0]" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetProjectOverview workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Custom\GetProjectOverview.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[in_ConnStr("GetProjectOverview").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[in_Query("GetProjectOverview").ToString]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ProjectDT">[ProjectDT]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[in_Config]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:String">StatusDict</InArgument>
          </InvokeMethod>
          <If Condition="[ProjectDT isNot Nothing and ProjectDT.Rows.Count &gt; 0]" DisplayName="If a new Item is fetched Grab it's significant data for logging" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap2010:Annotation.AnnotationText="Write data to the added fields that identify the Transaction" DisplayName="Write Transaction info in Logging Fields" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="UpdateCount" />
                  <Variable x:TypeArguments="x:String" Name="KisconId" />
                  <Variable x:TypeArguments="x:String" Name="BaseContractName" />
                  <Variable x:TypeArguments="x:Int32" Name="PJTIndex" />
                  <Variable x:TypeArguments="x:Boolean" Name="Found" />
                </Sequence.Variables>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[PJTIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - 초기화 " sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Found]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
                <DoWhile DisplayName="Do While" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[Not Found AndAlso PJTIndex &lt; ProjectDT.Rows.Count]">
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Assign DisplayName="Assign - 초기화 " sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[KisconId]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - 검색된 결과 복사" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataRow">[out_TransactionItem]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataRow">[ProjectDT(PJTIndex)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetKisconAccount workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Custom\GetKisconAccount.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[in_ConnStr("GetKisconAccount").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Query">[in_Query("GetKisconAccount").ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[out_TransactionItem("PJT_CD").ToString]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[KisconId]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_ContractName">[BaseContractName]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - 기본 계약명 설정 " sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[out_TransactionItem("기본계약명")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[BaseContractName]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - KISCON 사용자ID" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[out_TransactionItem("KISCON_ID")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[KisconId]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[Not String.IsNullOrEmpty( KisconId) AndAlso Not String.IsNullOrEmpty( BaseContractName)]" DisplayName="If - KISCON ID도 존재하고 기본계약명도 존재해야 처리 할 수 있음 " sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;처리 대상 데이터 PJT_CD: {0}, 계약명: {1}, 체결방식: {2}, 도급금액: {3} KISCON_ID: {4}&quot;, out_TransactionItem(&quot;PJT_CD&quot;).ToString, out_transactionItem(&quot;기본계약명&quot;).ToString, out_TransactionItem(&quot;계약체결방식&quot;).ToString, out_transactionItem(&quot;총도급금액&quot;).ToString, out_TransactionItem(&quot;KISCON_ID&quot;).ToString)]" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateProjectStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Custom\UpdateProjectStatus.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ConnStr">[in_ConnStr("UpdateProjectStatus").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Query">[in_Query("UpdateProjectStatus").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ProjectCode">[out_TransactionItem("PJT_CD").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ContractSeq">[out_TransactionItem("계약차수").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Status">P</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_ChangeSeq">[out_TransactionItem("변경회수").ToString]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="out_Rows">[UpdateCount]</OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Assign DisplayName="Assign TransactionID" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign TransactionField1" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_TransactionField1]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign TransactionField1" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_TransactionField2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - 대상항목 선택 " sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[Found]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[io_ContinueTab]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">공사개요</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign - 이전단계 설정">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[in_Config("ContinueTab")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["공사개요"]</InArgument>
                            </Assign.Value>
                            <sap2010:WorkflowViewState.IdRef>Assign_20</sap2010:WorkflowViewState.IdRef>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign - 다음 항목 " sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[PJTIndex]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[PJTIndex + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                </DoWhile>
                <If Condition="[Not Found]" DisplayName="If - 유효한게 없다면 " sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Assign DisplayName="Assign - 데이터 없음으로 처리 " sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataRow">[out_TransactionItem]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[out_TransactionItem]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[CType(in_Config("TransactionItem"), DataRow)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign TransactionID" sap2010:WorkflowViewState.IdRef="Assign_17">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[io_ContinueTab]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("ContinueTab").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[in_Config]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:String">TransactionItem</InArgument>
          </InvokeMethod>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d0lDOlxVc2Vyc1xib3QwMlxXb3Jrc3BhY2VcS2lzY29uX1VwZGF0ZXJcRnJhbWV3b3JrXEdldFRyYW5zYWN0aW9uRGF0YS54YW1sYFgDtQIOAgEBXAWzAgoCAQJcE1wpAgEDXgmPAhQCAReSAgmxAhQCAQVfC2UjAgF8ZgtrGgIBeGwLjgIQAgEYkwILmgIUAgETmwILogIUAgEPowILqgIUAgEKqwILsAIaAgEGYUlhdAMBggFiR2JwAwGAAWNRY1wCAX5fxQFf5QECAX1qNGo+AgF7aFBoWwIBeWwZbFQCARluD4wCGgIBGpgCOJgCZgIBFpUCOZUCTgIBFKACNqACRAIBEp0CN50CSgIBEKgCNqgCWQIBDaUCN6UCRwIBC68CNK8CQwIBCa0CUK0CWwIBB3YRfRoCAXR+EYUBGgIBcIYBEf8BGwIBIoACEYsCFgIBG3s7ezwCAXd4PHhGAgF1gwE9gwFCAgFzgAE+gAFFAgFxhgFnhgGfAQIBb4cBE/4BHgIBI4ACH4ACLAIBHIICFYkCHgIBHogBFY8BHgIBa5ABFZcBHgIBZ5gBFaABLQIBXKEBFagBHgIBWKkBFbABHgIBVLEBFf0BGgIBJIcCQocCSwIBIYQCQ4QCWAIBH40BQI0BTgIBbooBQYoBSwIBbJUBQpUBVwIBapIBQ5IBWAIBaJoBU5oBfAIBZZ4BWp4BbAIBY50BVp0BYAIBYZwBV5wBfwIBYJsBUZsBeAIBXpgBzQGYAesBAgFdpgFApgFSAgFaowFBowFfAgFZrgFArgFKAgFWqwFBqwFjAgFVsQEjsQF+AgElswEZ8QEkAgEt9AEZ+wEiAgEotAEbtAHpAwIBUrUBG78BMwIBRsABG8cBJAIBQsgBG88BJAIBPtABG9cBJAIBOtgBG98BJAIBNuABG+cBJAIBMugBG/ABJAIBLvkBQ/kBUQIBK/YBRPYBTgIBKbQBiAG0AeYDAgFTtwFZtwGFAQIBULoBXboBgwECAU+5AV25AYUBAgFOvQFXvQFkAgFMvAFbvAGBAQIBS7gBV7gBgQECAUm1AdYBtQH3AQIBSLsBWLsBWQIBR8UBRsUBVAIBRcIBR8IBWgIBQ80BRs0BVAIBQcoBR8oBXgIBP9UBRtUBVAIBPdIBR9IBXgIBO90BR90BSwIBOdoBSNoBTwIBN+UBRuUBSgIBNeIBR+IBVwIBM+0BRu0BTgIBMeoBR+oBYQIBLw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="798,87" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="798,132" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="651,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="651,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="603,87" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,942">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="603,1090">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="625,1741">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="651,1903" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="651,208" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="673,2502">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="798,2650" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="820,3073">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,556">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="1109,3221" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1131,3447">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetTransactionData_1" sap:VirtualizedContainerService.HintSize="1171,3527" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>